*** /home/didier/github/timescaledb/test/expected/plan_hashagg_optimized-11.0.out	2018-10-14 19:46:29.669572305 +0200
--- /home/didier/github/timescaledb/d_12/test/results/plan_hashagg_optimized-11.0.out	2018-10-15 01:32:24.098763931 +0200
***************
*** 74,119 ****
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time")) DESC
!    ->  Finalize HashAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time"))
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time")
!                      ->  Result
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (14 rows)
  
  :PREFIX SELECT time_bucket('1 hour', time) AS MetricMinuteTs, metricid, AVG(value) as avg
  FROM hyper
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs, metricid
  ORDER BY MetricMinuteTs DESC, metricid;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (time_bucket('@ 1 hour'::interval, _hyper_1_1_chunk."time")) DESC, _hyper_1_1_chunk.metricid
!    ->  Finalize HashAggregate
!          Group Key: (time_bucket('@ 1 hour'::interval, _hyper_1_1_chunk."time")), _hyper_1_1_chunk.metricid
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: time_bucket('@ 1 hour'::interval, _hyper_1_1_chunk."time"), _hyper_1_1_chunk.metricid
!                      ->  Result
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (14 rows)
  
  --should be too many groups will not hashaggregate
  :PREFIX SELECT time_bucket('1 second', time) AS MetricMinuteTs, metricid, AVG(value) as avg
--- 74,111 ----
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (time_bucket('@ 1 min'::interval, hyper."time")) DESC
!    ->  HashAggregate
!          Group Key: time_bucket('@ 1 min'::interval, hyper."time")
!          ->  Result
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (10 rows)
  
  :PREFIX SELECT time_bucket('1 hour', time) AS MetricMinuteTs, metricid, AVG(value) as avg
  FROM hyper
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs, metricid
  ORDER BY MetricMinuteTs DESC, metricid;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (time_bucket('@ 1 hour'::interval, hyper."time")) DESC, hyper.metricid
!    ->  HashAggregate
!          Group Key: time_bucket('@ 1 hour'::interval, hyper."time"), hyper.metricid
!          ->  Result
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (10 rows)
  
  --should be too many groups will not hashaggregate
  :PREFIX SELECT time_bucket('1 second', time) AS MetricMinuteTs, metricid, AVG(value) as avg
***************
*** 144,212 ****
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
!    ->  Finalize HashAggregate
!          Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)
!                      ->  Result
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (14 rows)
  
  :PREFIX SELECT time_bucket(60, time_int) AS MetricMinuteTs, AVG(value) as avg
  FROM hyper
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (time_bucket('60'::bigint, _hyper_1_1_chunk.time_int)) DESC
!    ->  Finalize HashAggregate
!          Group Key: (time_bucket('60'::bigint, _hyper_1_1_chunk.time_int))
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: time_bucket('60'::bigint, _hyper_1_1_chunk.time_int)
!                      ->  Result
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (14 rows)
  
  :PREFIX SELECT time_bucket(60, time_int, 10) AS MetricMinuteTs, AVG(value) as avg
  FROM hyper
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: ((time_bucket('60'::bigint, (_hyper_1_1_chunk.time_int - '10'::bigint)) + '10'::bigint)) DESC
!    ->  Finalize HashAggregate
!          Group Key: ((time_bucket('60'::bigint, (_hyper_1_1_chunk.time_int - '10'::bigint)) + '10'::bigint))
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: (time_bucket('60'::bigint, (_hyper_1_1_chunk.time_int - '10'::bigint)) + '10'::bigint)
!                      ->  Result
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (14 rows)
  
  :PREFIX SELECT time_bucket('1 day', time_date) AS MetricMinuteTs, AVG(value) as avg
  FROM hyper
--- 136,192 ----
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: ((time_bucket('@ 1 min'::interval, (hyper."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
!    ->  HashAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, (hyper."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)
!          ->  Result
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (10 rows)
  
  :PREFIX SELECT time_bucket(60, time_int) AS MetricMinuteTs, AVG(value) as avg
  FROM hyper
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (time_bucket('60'::bigint, hyper.time_int)) DESC
!    ->  HashAggregate
!          Group Key: time_bucket('60'::bigint, hyper.time_int)
!          ->  Result
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (10 rows)
  
  :PREFIX SELECT time_bucket(60, time_int, 10) AS MetricMinuteTs, AVG(value) as avg
  FROM hyper
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: ((time_bucket('60'::bigint, (hyper.time_int - '10'::bigint)) + '10'::bigint)) DESC
!    ->  HashAggregate
!          Group Key: (time_bucket('60'::bigint, (hyper.time_int - '10'::bigint)) + '10'::bigint)
!          ->  Result
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (10 rows)
  
  :PREFIX SELECT time_bucket('1 day', time_date) AS MetricMinuteTs, AVG(value) as avg
  FROM hyper
***************
*** 215,226 ****
  ORDER BY MetricMinuteTs DESC;
                                                                                           QUERY PLAN                                                                                          
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
!  Sort
!    Sort Key: (time_bucket('@ 1 day'::interval, _hyper_1_1_chunk.time_date)) DESC
!    ->  Finalize HashAggregate
!          Group Key: (time_bucket('@ 1 day'::interval, _hyper_1_1_chunk.time_date))
!          ->  Gather
!                Workers Planned: 2
                 ->  Partial HashAggregate
                       Group Key: time_bucket('@ 1 day'::interval, _hyper_1_1_chunk.time_date)
                       ->  Result
--- 195,206 ----
  ORDER BY MetricMinuteTs DESC;
                                                                                           QUERY PLAN                                                                                          
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
!  Finalize GroupAggregate
!    Group Key: (time_bucket('@ 1 day'::interval, _hyper_1_1_chunk.time_date))
!    ->  Gather Merge
!          Workers Planned: 2
!          ->  Sort
!                Sort Key: (time_bucket('@ 1 day'::interval, _hyper_1_1_chunk.time_date)) DESC
                 ->  Partial HashAggregate
                       Group Key: time_bucket('@ 1 day'::interval, _hyper_1_1_chunk.time_date)
                       ->  Result
***************
*** 236,258 ****
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time")) DESC
!    ->  Finalize HashAggregate
!          Group Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time"))
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: date_trunc('minute'::text, _hyper_1_1_chunk."time")
!                      ->  Result
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (14 rows)
  
  \set ON_ERROR_STOP 0
  --can't optimize invalid time unit
--- 216,234 ----
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs
  ORDER BY MetricMinuteTs DESC;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: (date_trunc('minute'::text, hyper."time")) DESC
!    ->  HashAggregate
!          Group Key: date_trunc('minute'::text, hyper."time")
!          ->  Result
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
! (10 rows)
  
  \set ON_ERROR_STOP 0
  --can't optimize invalid time unit
***************
*** 289,298 ****
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Finalize GroupAggregate
     Group Key: (date_trunc('day'::text, (_hyper_1_1_chunk.time_date)::timestamp with time zone))
!    ->  Sort
!          Sort Key: (date_trunc('day'::text, (_hyper_1_1_chunk.time_date)::timestamp with time zone)) DESC
!          ->  Gather
!                Workers Planned: 2
                 ->  Partial HashAggregate
                       Group Key: date_trunc('day'::text, (_hyper_1_1_chunk.time_date)::timestamp with time zone)
                       ->  Result
--- 265,274 ----
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Finalize GroupAggregate
     Group Key: (date_trunc('day'::text, (_hyper_1_1_chunk.time_date)::timestamp with time zone))
!    ->  Gather Merge
!          Workers Planned: 2
!          ->  Sort
!                Sort Key: (date_trunc('day'::text, (_hyper_1_1_chunk.time_date)::timestamp with time zone)) DESC
                 ->  Partial HashAggregate
                       Group Key: date_trunc('day'::text, (_hyper_1_1_chunk.time_date)::timestamp with time zone)
                       ->  Result
***************
*** 311,336 ****
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs, metric.id
  ORDER BY MetricMinuteTs DESC, metric.id;
!                                                                                          QUERY PLAN                                                                                          
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: ((time_bucket('3600'::bigint, (_hyper_1_1_chunk.time_int - '10'::bigint)) + '10'::bigint)) DESC, metric.id
!    ->  Finalize HashAggregate
!          Group Key: ((time_bucket('3600'::bigint, (_hyper_1_1_chunk.time_int - '10'::bigint)) + '10'::bigint)), metric.id
!          ->  Gather
!                Workers Planned: 2
!                ->  Partial HashAggregate
!                      Group Key: (time_bucket('3600'::bigint, (_hyper_1_1_chunk.time_int - '10'::bigint)) + '10'::bigint), metric.id
!                      ->  Hash Join
!                            Hash Cond: (_hyper_1_1_chunk.metricid = metric.id)
!                            ->  Parallel Append
!                                  ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                                  ->  Parallel Seq Scan on hyper
!                                        Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                            ->  Hash
!                                  ->  Seq Scan on metric
! (17 rows)
  
  --no hypertable involved, no optimization
  :PREFIX SELECT time_bucket(3600, time_int, 10) AS MetricMinuteTs, metric.value, AVG(regular.value) as avg
--- 287,308 ----
  WHERE time >= '2001-01-04T00:00:00' AND time <= '2001-01-05T01:00:00'
  GROUP BY MetricMinuteTs, metric.id
  ORDER BY MetricMinuteTs DESC, metric.id;
!                                                                                    QUERY PLAN                                                                                    
! ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Sort
!    Sort Key: ((time_bucket('3600'::bigint, (hyper.time_int - '10'::bigint)) + '10'::bigint)) DESC, metric.id
!    ->  HashAggregate
!          Group Key: (time_bucket('3600'::bigint, (hyper.time_int - '10'::bigint)) + '10'::bigint), metric.id
!          ->  Hash Join
!                Hash Cond: (hyper.metricid = metric.id)
!                ->  Append
!                      ->  Seq Scan on hyper
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                      ->  Seq Scan on _hyper_1_1_chunk
!                            Filter: (("time" >= 'Thu Jan 04 00:00:00 2001'::timestamp without time zone) AND ("time" <= 'Fri Jan 05 01:00:00 2001'::timestamp without time zone))
!                ->  Hash
!                      ->  Seq Scan on metric
! (13 rows)
  
  --no hypertable involved, no optimization
  :PREFIX SELECT time_bucket(3600, time_int, 10) AS MetricMinuteTs, metric.value, AVG(regular.value) as avg

======================================================================

*** /home/didier/github/timescaledb/test/expected/sql_query_results_unoptimized.out	2018-10-13 23:25:19.297867394 +0200
--- /home/didier/github/timescaledb/d_12/test/results/sql_query_results_unoptimized.out	2018-10-15 01:34:22.048960608 +0200
***************
*** 95,112 ****
  
  --aggregates use MergeAppend only in optimized
  EXPLAIN (costs off) SELECT date_trunc('minute', time) t, avg(series_0), min(series_1), avg(series_2) FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                 QUERY PLAN                                 
! ---------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: (date_trunc('minute'::text, hyper_1."time"))
!          ->  Sort
!                Sort Key: (date_trunc('minute'::text, hyper_1."time")) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1
!                            ->  Seq Scan on _hyper_1_1_chunk
! (9 rows)
  
  EXPLAIN (costs off) SELECT date_trunc('minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_date GROUP BY t ORDER BY t DESC limit 2;
--- 95,116 ----
  
  --aggregates use MergeAppend only in optimized
  EXPLAIN (costs off) SELECT date_trunc('minute', time) t, avg(series_0), min(series_1), avg(series_2) FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                            QUERY PLAN                                           
! ------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time"))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time"))
!                      ->  Sort
!                            Sort Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time")) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        ->  Parallel Seq Scan on hyper_1
! (13 rows)
  
  EXPLAIN (costs off) SELECT date_trunc('minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_date GROUP BY t ORDER BY t DESC limit 2;
***************
*** 242,259 ****
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                    QUERY PLAN                                    
! ---------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, hyper_1."time"))
!          ->  Sort
!                Sort Key: (time_bucket('@ 1 min'::interval, hyper_1."time")) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1
!                            ->  Seq Scan on _hyper_1_1_chunk
! (9 rows)
  
  SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
--- 246,267 ----
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                               QUERY PLAN                                              
! ------------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time"))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time"))
!                      ->  Sort
!                            Sort Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time")) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        ->  Parallel Seq Scan on hyper_1
! (13 rows)
  
  SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
***************
*** 265,282 ****
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time, INTERVAL '30 seconds') t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                                              QUERY PLAN                                                              
! -------------------------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!          ->  Sort
!                Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1
!                            ->  Seq Scan on _hyper_1_1_chunk
! (9 rows)
  
  SELECT time_bucket('1 minute', time, INTERVAL '30 seconds') t, trunc(avg(series_0)::numeric, 8) as avg_trunc1, min(series_1), trunc(avg(series_2)::numeric, 8) as avg_trunc2
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
--- 273,294 ----
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time, INTERVAL '30 seconds') t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                                                         QUERY PLAN                                                                        
! ----------------------------------------------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!                      ->  Sort
!                            Sort Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        ->  Parallel Seq Scan on hyper_1
! (13 rows)
  
  SELECT time_bucket('1 minute', time, INTERVAL '30 seconds') t, trunc(avg(series_0)::numeric, 8) as avg_trunc1, min(series_1), trunc(avg(series_2)::numeric, 8) as avg_trunc2
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
***************
*** 288,305 ****
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                                 QUERY PLAN                                                 
! -----------------------------------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)))
!          ->  Sort
!                Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval))) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1
!                            ->  Seq Scan on _hyper_1_1_chunk
! (9 rows)
  
  SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') t, trunc(avg(series_0)::numeric, 8) as avg_trunc1, min(series_1), trunc(avg(series_2)::numeric, 8) as avg_trunc2
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
--- 300,321 ----
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                                            QUERY PLAN                                                           
! --------------------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)))
!                      ->  Sort
!                            Sort Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval))) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        ->  Parallel Seq Scan on hyper_1
! (13 rows)
  
  SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') t, trunc(avg(series_0)::numeric, 8) as avg_trunc1, min(series_1), trunc(avg(series_2)::numeric, 8) as avg_trunc2
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
***************
*** 311,328 ****
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') + INTERVAL '30 seconds' t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                                              QUERY PLAN                                                              
! -------------------------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!          ->  Sort
!                Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1
!                            ->  Seq Scan on _hyper_1_1_chunk
! (9 rows)
  
  SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') + INTERVAL '30 seconds' t, trunc(avg(series_0)::numeric, 8) as avg_trunc1, min(series_1), trunc(avg(series_2)::numeric, 8) as avg_trunc2
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
--- 327,348 ----
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') + INTERVAL '30 seconds' t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
!                                                                         QUERY PLAN                                                                        
! ----------------------------------------------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
!                      ->  Sort
!                            Sort Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
!                                        ->  Parallel Seq Scan on hyper_1
! (13 rows)
  
  SELECT time_bucket('1 minute', time - INTERVAL '30 seconds') + INTERVAL '30 seconds' t, trunc(avg(series_0)::numeric, 8) as avg_trunc1, min(series_1), trunc(avg(series_2)::numeric, 8) as avg_trunc2
  FROM hyper_1 GROUP BY t ORDER BY t DESC limit 2;
***************
*** 334,351 ****
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
!                                      QUERY PLAN                                     
! ------------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, hyper_1_tz."time"))
!          ->  Sort
!                Sort Key: (time_bucket('@ 1 min'::interval, hyper_1_tz."time")) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1_tz
!                            ->  Seq Scan on _hyper_2_2_chunk
! (9 rows)
  
  SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
--- 354,375 ----
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
!                                               QUERY PLAN                                              
! ------------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, _hyper_2_2_chunk."time"))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: (time_bucket('@ 1 min'::interval, _hyper_2_2_chunk."time"))
!                      ->  Sort
!                            Sort Key: (time_bucket('@ 1 min'::interval, _hyper_2_2_chunk."time")) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_2_2_chunk
!                                        ->  Parallel Seq Scan on hyper_1_tz
! (13 rows)
  
  SELECT time_bucket('1 minute', time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
***************
*** 357,374 ****
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time::timestamp) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
!                                                     QUERY PLAN                                                     
! -------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, (hyper_1_tz."time")::timestamp without time zone))
!          ->  Sort
!                Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1_tz."time")::timestamp without time zone)) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1_tz
!                            ->  Seq Scan on _hyper_2_2_chunk
! (9 rows)
  
  SELECT time_bucket('1 minute', time::timestamp) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
--- 381,402 ----
  
  EXPLAIN (costs off) SELECT time_bucket('1 minute', time::timestamp) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
!                                                              QUERY PLAN                                                              
! -------------------------------------------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: (time_bucket('@ 1 min'::interval, (_hyper_2_2_chunk."time")::timestamp without time zone))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: (time_bucket('@ 1 min'::interval, (_hyper_2_2_chunk."time")::timestamp without time zone))
!                      ->  Sort
!                            Sort Key: (time_bucket('@ 1 min'::interval, (_hyper_2_2_chunk."time")::timestamp without time zone)) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_2_2_chunk
!                                        ->  Parallel Seq Scan on hyper_1_tz
! (13 rows)
  
  SELECT time_bucket('1 minute', time::timestamp) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_tz GROUP BY t ORDER BY t DESC limit 2;
***************
*** 380,399 ****
  
  EXPLAIN (costs off) SELECT time_bucket(10, time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
!                              QUERY PLAN                             
! --------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: (time_bucket(10, hyper_1_int."time"))
!          ->  Sort
!                Sort Key: (time_bucket(10, hyper_1_int."time")) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1_int
!                            ->  Seq Scan on _hyper_3_3_chunk
!                            ->  Seq Scan on _hyper_3_4_chunk
!                            ->  Seq Scan on _hyper_3_5_chunk
! (11 rows)
  
  SELECT time_bucket(10, time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
--- 408,431 ----
  
  EXPLAIN (costs off) SELECT time_bucket(10, time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
!                                      QUERY PLAN                                      
! -------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: (time_bucket(10, _hyper_3_3_chunk."time"))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: (time_bucket(10, _hyper_3_3_chunk."time"))
!                      ->  Sort
!                            Sort Key: (time_bucket(10, _hyper_3_3_chunk."time")) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_3_3_chunk
!                                        ->  Parallel Seq Scan on _hyper_3_4_chunk
!                                        ->  Parallel Seq Scan on _hyper_3_5_chunk
!                                        ->  Parallel Seq Scan on hyper_1_int
! (15 rows)
  
  SELECT time_bucket(10, time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
***************
*** 405,424 ****
  
  EXPLAIN (costs off) SELECT time_bucket(10, time, 2) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
!                                    QUERY PLAN                                   
! --------------------------------------------------------------------------------
   Limit
!    ->  GroupAggregate
!          Group Key: ((time_bucket(10, (hyper_1_int."time" - 2)) + 2))
!          ->  Sort
!                Sort Key: ((time_bucket(10, (hyper_1_int."time" - 2)) + 2)) DESC
!                ->  Result
!                      ->  Append
!                            ->  Seq Scan on hyper_1_int
!                            ->  Seq Scan on _hyper_3_3_chunk
!                            ->  Seq Scan on _hyper_3_4_chunk
!                            ->  Seq Scan on _hyper_3_5_chunk
! (11 rows)
  
  SELECT time_bucket(10, time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
--- 437,460 ----
  
  EXPLAIN (costs off) SELECT time_bucket(10, time, 2) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;
!                                            QUERY PLAN                                            
! -------------------------------------------------------------------------------------------------
   Limit
!    ->  Finalize GroupAggregate
!          Group Key: ((time_bucket(10, (_hyper_3_3_chunk."time" - 2)) + 2))
!          ->  Gather Merge
!                Workers Planned: 2
!                ->  Partial GroupAggregate
!                      Group Key: ((time_bucket(10, (_hyper_3_3_chunk."time" - 2)) + 2))
!                      ->  Sort
!                            Sort Key: ((time_bucket(10, (_hyper_3_3_chunk."time" - 2)) + 2)) DESC
!                            ->  Result
!                                  ->  Parallel Append
!                                        ->  Parallel Seq Scan on _hyper_3_3_chunk
!                                        ->  Parallel Seq Scan on _hyper_3_4_chunk
!                                        ->  Parallel Seq Scan on _hyper_3_5_chunk
!                                        ->  Parallel Seq Scan on hyper_1_int
! (15 rows)
  
  SELECT time_bucket(10, time) t, avg(series_0), min(series_1), avg(series_2)
  FROM hyper_1_int GROUP BY t ORDER BY t DESC limit 2;

======================================================================

*** /home/didier/github/timescaledb/test/expected/sql_query_results_x_diff.out	2018-10-12 22:32:13.366849426 +0200
--- /home/didier/github/timescaledb/d_12/test/results/sql_query_results_x_diff.out	2018-10-15 01:34:23.180945097 +0200
***************
*** 8,16 ****
  <                                         QUERY PLAN                                        
  < ------------------------------------------------------------------------------------------
  ---
! >                                 QUERY PLAN                                 
! > ---------------------------------------------------------------------------
! 103,108c103,109
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (date_trunc('minute'::text, hyper_1."time")) DESC
--- 8,18 ----
  <                                         QUERY PLAN                                        
  < ------------------------------------------------------------------------------------------
  ---
! >                                            QUERY PLAN                                           
! > ------------------------------------------------------------------------------------------------
! 101,108c101,113
! <    ->  GroupAggregate
! <          Group Key: (date_trunc('minute'::text, hyper_1."time"))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (date_trunc('minute'::text, hyper_1."time")) DESC
***************
*** 18,37 ****
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: (date_trunc('minute'::text, hyper_1."time")) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1
! >                            ->  Seq Scan on _hyper_1_1_chunk
! > (9 rows)
! 112,113c113,114
  <                                                     QUERY PLAN                                                    
  < ------------------------------------------------------------------------------------------------------------------
  ---
  >                                               QUERY PLAN                                              
  > ------------------------------------------------------------------------------------------------------
! 115,134c116,136
  <    ->  GroupAggregate
  <          Group Key: (date_trunc('minute'::text, (hyper_1_date."time")::timestamp with time zone))
  <          ->  Result
--- 20,45 ----
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time"))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time"))
! >                      ->  Sort
! >                            Sort Key: (date_trunc('minute'::text, _hyper_1_1_chunk."time")) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
! >                                        ->  Parallel Seq Scan on hyper_1
! > (13 rows)
! 112,113c117,118
  <                                                     QUERY PLAN                                                    
  < ------------------------------------------------------------------------------------------------------------------
  ---
  >                                               QUERY PLAN                                              
  > ------------------------------------------------------------------------------------------------------
! 115,134c120,140
  <    ->  GroupAggregate
  <          Group Key: (date_trunc('minute'::text, (hyper_1_date."time")::timestamp with time zone))
  <          ->  Result
***************
*** 74,86 ****
  >                            ->  Seq Scan on _hyper_4_17_chunk
  >                            ->  Seq Scan on _hyper_4_18_chunk
  > (21 rows)
! 159,160c161,162
  <                                                 QUERY PLAN                                                 
  < -----------------------------------------------------------------------------------------------------------
  ---
  >                                                       QUERY PLAN                                                       
  > -----------------------------------------------------------------------------------------------------------------------
! 162,171c164,176
  <    ->  GroupAggregate
  <          Group Key: (date_trunc('minute'::text, hyper_1."time"))
  <          ->  Custom Scan (ConstraintAwareAppend)
--- 82,94 ----
  >                            ->  Seq Scan on _hyper_4_17_chunk
  >                            ->  Seq Scan on _hyper_4_18_chunk
  > (21 rows)
! 159,160c165,166
  <                                                 QUERY PLAN                                                 
  < -----------------------------------------------------------------------------------------------------------
  ---
  >                                                       QUERY PLAN                                                       
  > -----------------------------------------------------------------------------------------------------------------------
! 162,171c168,180
  <    ->  GroupAggregate
  <          Group Key: (date_trunc('minute'::text, hyper_1."time"))
  <          ->  Custom Scan (ConstraintAwareAppend)
***************
*** 105,117 ****
  >                                  ->  Bitmap Index Scan on _hyper_1_1_chunk_time_plain
  >                                        Index Cond: ("time" < 'Wed Dec 31 16:15:00 1969 PST'::timestamp with time zone)
  > (13 rows)
! 240,241c245,246
  <                                         QUERY PLAN                                        
  < ------------------------------------------------------------------------------------------
  ---
! >                                    QUERY PLAN                                    
! > ---------------------------------------------------------------------------------
! 245,250c250,256
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, hyper_1."time")) DESC
--- 113,127 ----
  >                                  ->  Bitmap Index Scan on _hyper_1_1_chunk_time_plain
  >                                        Index Cond: ("time" < 'Wed Dec 31 16:15:00 1969 PST'::timestamp with time zone)
  > (13 rows)
! 240,241c249,250
  <                                         QUERY PLAN                                        
  < ------------------------------------------------------------------------------------------
  ---
! >                                               QUERY PLAN                                              
! > ------------------------------------------------------------------------------------------------------
! 243,250c252,264
! <    ->  GroupAggregate
! <          Group Key: (time_bucket('@ 1 min'::interval, hyper_1."time"))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, hyper_1."time")) DESC
***************
*** 119,138 ****
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: (time_bucket('@ 1 min'::interval, hyper_1."time")) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1
! >                            ->  Seq Scan on _hyper_1_1_chunk
! > (9 rows)
! 262,263c268,269
  <                                                                 QUERY PLAN                                                                 
  < -------------------------------------------------------------------------------------------------------------------------------------------
  ---
! >                                                              QUERY PLAN                                                              
! > -------------------------------------------------------------------------------------------------------------------------------------
! 267,272c273,279
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
--- 129,156 ----
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time"))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time"))
! >                      ->  Sort
! >                            Sort Key: (time_bucket('@ 1 min'::interval, _hyper_1_1_chunk."time")) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
! >                                        ->  Parallel Seq Scan on hyper_1
! > (13 rows)
! 262,263c276,277
  <                                                                 QUERY PLAN                                                                 
  < -------------------------------------------------------------------------------------------------------------------------------------------
  ---
! >                                                                         QUERY PLAN                                                                        
! > ----------------------------------------------------------------------------------------------------------------------------------------------------------
! 265,272c279,291
! <    ->  GroupAggregate
! <          Group Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
***************
*** 140,159 ****
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1
! >                            ->  Seq Scan on _hyper_1_1_chunk
! > (9 rows)
! 284,285c291,292
  <                                                    QUERY PLAN                                                    
  < -----------------------------------------------------------------------------------------------------------------
  ---
! >                                                 QUERY PLAN                                                 
! > -----------------------------------------------------------------------------------------------------------
! 289,294c296,302
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval))) DESC
--- 158,185 ----
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
! >                      ->  Sort
! >                            Sort Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
! >                                        ->  Parallel Seq Scan on hyper_1
! > (13 rows)
! 284,285c303,304
  <                                                    QUERY PLAN                                                    
  < -----------------------------------------------------------------------------------------------------------------
  ---
! >                                                            QUERY PLAN                                                           
! > --------------------------------------------------------------------------------------------------------------------------------
! 287,294c306,318
! <    ->  GroupAggregate
! <          Group Key: (time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval))) DESC
***************
*** 161,180 ****
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval))) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1
! >                            ->  Seq Scan on _hyper_1_1_chunk
! > (9 rows)
! 306,307c314,315
  <                                                                 QUERY PLAN                                                                 
  < -------------------------------------------------------------------------------------------------------------------------------------------
  ---
! >                                                              QUERY PLAN                                                              
! > -------------------------------------------------------------------------------------------------------------------------------------
! 311,316c319,325
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
--- 187,214 ----
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)))
! >                      ->  Sort
! >                            Sort Key: (time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval))) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
! >                                        ->  Parallel Seq Scan on hyper_1
! > (13 rows)
! 306,307c330,331
  <                                                                 QUERY PLAN                                                                 
  < -------------------------------------------------------------------------------------------------------------------------------------------
  ---
! >                                                                         QUERY PLAN                                                                        
! > ----------------------------------------------------------------------------------------------------------------------------------------------------------
! 309,316c333,345
! <    ->  GroupAggregate
! <          Group Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
***************
*** 182,201 ****
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: ((time_bucket('@ 1 min'::interval, (hyper_1."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1
! >                            ->  Seq Scan on _hyper_1_1_chunk
! > (9 rows)
! 328,329c337,338
  <                                          QUERY PLAN                                          
  < ---------------------------------------------------------------------------------------------
  ---
! >                                      QUERY PLAN                                     
! > ------------------------------------------------------------------------------------
! 333,338c342,348
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, hyper_1_tz."time")) DESC
--- 216,243 ----
  <                      ->  Index Scan using _hyper_1_1_chunk_time_plain on _hyper_1_1_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval))
! >                      ->  Sort
! >                            Sort Key: ((time_bucket('@ 1 min'::interval, (_hyper_1_1_chunk."time" - '@ 30 secs'::interval)) + '@ 30 secs'::interval)) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_1_1_chunk
! >                                        ->  Parallel Seq Scan on hyper_1
! > (13 rows)
! 328,329c357,358
  <                                          QUERY PLAN                                          
  < ---------------------------------------------------------------------------------------------
  ---
! >                                               QUERY PLAN                                              
! > ------------------------------------------------------------------------------------------------------
! 331,338c360,372
! <    ->  GroupAggregate
! <          Group Key: (time_bucket('@ 1 min'::interval, hyper_1_tz."time"))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, hyper_1_tz."time")) DESC
***************
*** 203,222 ****
  <                      ->  Index Scan using _hyper_2_2_chunk_time_plain_tz on _hyper_2_2_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: (time_bucket('@ 1 min'::interval, hyper_1_tz."time")) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1_tz
! >                            ->  Seq Scan on _hyper_2_2_chunk
! > (9 rows)
! 350,351c360,361
  <                                                        QUERY PLAN                                                        
  < -------------------------------------------------------------------------------------------------------------------------
  ---
! >                                                     QUERY PLAN                                                     
! > -------------------------------------------------------------------------------------------------------------------
! 355,360c365,371
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1_tz."time")::timestamp without time zone)) DESC
--- 245,272 ----
  <                      ->  Index Scan using _hyper_2_2_chunk_time_plain_tz on _hyper_2_2_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: (time_bucket('@ 1 min'::interval, _hyper_2_2_chunk."time"))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: (time_bucket('@ 1 min'::interval, _hyper_2_2_chunk."time"))
! >                      ->  Sort
! >                            Sort Key: (time_bucket('@ 1 min'::interval, _hyper_2_2_chunk."time")) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_2_2_chunk
! >                                        ->  Parallel Seq Scan on hyper_1_tz
! > (13 rows)
! 350,351c384,385
  <                                                        QUERY PLAN                                                        
  < -------------------------------------------------------------------------------------------------------------------------
  ---
! >                                                              QUERY PLAN                                                              
! > -------------------------------------------------------------------------------------------------------------------------------------
! 353,360c387,399
! <    ->  GroupAggregate
! <          Group Key: (time_bucket('@ 1 min'::interval, (hyper_1_tz."time")::timestamp without time zone))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1_tz."time")::timestamp without time zone)) DESC
***************
*** 224,243 ****
  <                      ->  Index Scan using _hyper_2_2_chunk_time_plain_tz on _hyper_2_2_chunk
  < (8 rows)
  ---
! >          ->  Sort
! >                Sort Key: (time_bucket('@ 1 min'::interval, (hyper_1_tz."time")::timestamp without time zone)) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1_tz
! >                            ->  Seq Scan on _hyper_2_2_chunk
! > (9 rows)
! 372,373c383,384
  <                                           QUERY PLAN                                          
  < ----------------------------------------------------------------------------------------------
  ---
! >                              QUERY PLAN                             
! > --------------------------------------------------------------------
! 377,384c388,396
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket(10, hyper_1_int."time")) DESC
--- 274,301 ----
  <                      ->  Index Scan using _hyper_2_2_chunk_time_plain_tz on _hyper_2_2_chunk
  < (8 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: (time_bucket('@ 1 min'::interval, (_hyper_2_2_chunk."time")::timestamp without time zone))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: (time_bucket('@ 1 min'::interval, (_hyper_2_2_chunk."time")::timestamp without time zone))
! >                      ->  Sort
! >                            Sort Key: (time_bucket('@ 1 min'::interval, (_hyper_2_2_chunk."time")::timestamp without time zone)) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_2_2_chunk
! >                                        ->  Parallel Seq Scan on hyper_1_tz
! > (13 rows)
! 372,373c411,412
  <                                           QUERY PLAN                                          
  < ----------------------------------------------------------------------------------------------
  ---
! >                                      QUERY PLAN                                      
! > -------------------------------------------------------------------------------------
! 375,384c414,428
! <    ->  GroupAggregate
! <          Group Key: (time_bucket(10, hyper_1_int."time"))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: (time_bucket(10, hyper_1_int."time")) DESC
***************
*** 247,268 ****
  <                      ->  Index Scan using _hyper_3_5_chunk_time_plain_int on _hyper_3_5_chunk
  < (10 rows)
  ---
! >          ->  Sort
! >                Sort Key: (time_bucket(10, hyper_1_int."time")) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1_int
! >                            ->  Seq Scan on _hyper_3_3_chunk
! >                            ->  Seq Scan on _hyper_3_4_chunk
! >                            ->  Seq Scan on _hyper_3_5_chunk
! > (11 rows)
! 396,397c408,409
  <                                           QUERY PLAN                                          
  < ----------------------------------------------------------------------------------------------
  ---
! >                                    QUERY PLAN                                   
! > --------------------------------------------------------------------------------
! 401,408c413,421
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: ((time_bucket(10, (hyper_1_int."time" - 2)) + 2)) DESC
--- 305,334 ----
  <                      ->  Index Scan using _hyper_3_5_chunk_time_plain_int on _hyper_3_5_chunk
  < (10 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: (time_bucket(10, _hyper_3_3_chunk."time"))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: (time_bucket(10, _hyper_3_3_chunk."time"))
! >                      ->  Sort
! >                            Sort Key: (time_bucket(10, _hyper_3_3_chunk."time")) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_3_3_chunk
! >                                        ->  Parallel Seq Scan on _hyper_3_4_chunk
! >                                        ->  Parallel Seq Scan on _hyper_3_5_chunk
! >                                        ->  Parallel Seq Scan on hyper_1_int
! > (15 rows)
! 396,397c440,441
  <                                           QUERY PLAN                                          
  < ----------------------------------------------------------------------------------------------
  ---
! >                                            QUERY PLAN                                            
! > -------------------------------------------------------------------------------------------------
! 399,408c443,457
! <    ->  GroupAggregate
! <          Group Key: ((time_bucket(10, (hyper_1_int."time" - 2)) + 2))
  <          ->  Result
  <                ->  Merge Append
  <                      Sort Key: ((time_bucket(10, (hyper_1_int."time" - 2)) + 2)) DESC
***************
*** 272,293 ****
  <                      ->  Index Scan using _hyper_3_5_chunk_time_plain_int on _hyper_3_5_chunk
  < (10 rows)
  ---
! >          ->  Sort
! >                Sort Key: ((time_bucket(10, (hyper_1_int."time" - 2)) + 2)) DESC
! >                ->  Result
! >                      ->  Append
! >                            ->  Seq Scan on hyper_1_int
! >                            ->  Seq Scan on _hyper_3_3_chunk
! >                            ->  Seq Scan on _hyper_3_4_chunk
! >                            ->  Seq Scan on _hyper_3_5_chunk
! > (11 rows)
! 461,462c474,475
  <                                           QUERY PLAN                                           
  < -----------------------------------------------------------------------------------------------
  ---
  >                                                 QUERY PLAN                                                 
  > -----------------------------------------------------------------------------------------------------------
! 464,468c477,485
  <    ->  GroupAggregate
  <          Group Key: date_trunc('minute'::text, "time")
  <          ->  Index Scan using time_plain_plain_table on plain_table
--- 338,365 ----
  <                      ->  Index Scan using _hyper_3_5_chunk_time_plain_int on _hyper_3_5_chunk
  < (10 rows)
  ---
! >    ->  Finalize GroupAggregate
! >          Group Key: ((time_bucket(10, (_hyper_3_3_chunk."time" - 2)) + 2))
! >          ->  Gather Merge
! >                Workers Planned: 2
! >                ->  Partial GroupAggregate
! >                      Group Key: ((time_bucket(10, (_hyper_3_3_chunk."time" - 2)) + 2))
! >                      ->  Sort
! >                            Sort Key: ((time_bucket(10, (_hyper_3_3_chunk."time" - 2)) + 2)) DESC
! >                            ->  Result
! >                                  ->  Parallel Append
! >                                        ->  Parallel Seq Scan on _hyper_3_3_chunk
! >                                        ->  Parallel Seq Scan on _hyper_3_4_chunk
! >                                        ->  Parallel Seq Scan on _hyper_3_5_chunk
! >                                        ->  Parallel Seq Scan on hyper_1_int
! > (15 rows)
! 461,462c510,511
  <                                           QUERY PLAN                                           
  < -----------------------------------------------------------------------------------------------
  ---
  >                                                 QUERY PLAN                                                 
  > -----------------------------------------------------------------------------------------------------------
! 464,468c513,521
  <    ->  GroupAggregate
  <          Group Key: date_trunc('minute'::text, "time")
  <          ->  Index Scan using time_plain_plain_table on plain_table

======================================================================

*** /home/didier/github/timescaledb/test/expected/upsert.out	2018-10-13 23:25:19.321869179 +0200
--- /home/didier/github/timescaledb/d_12/test/results/upsert.out	2018-10-15 01:34:48.636604465 +0200
***************
*** 145,261 ****
  INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev2', 25.9, 'yellow');
  INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev1', 23.5, 'orange') ON CONFLICT (time, device_id)
  DO UPDATE SET color = excluded.color;
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev2', 23.5, 'orange3') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color||' (originally '|| upsert_test_space.color ||')' RETURNING *;
!            time           | temp |            color            |      device_id       
! --------------------------+------+-----------------------------+----------------------
!  Fri Jan 20 09:00:01 2017 | 25.9 | orange3 (originally yellow) | dev2                
! (1 row)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev3', 23.5, 'orange3.1') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color||' (originally '|| upsert_test_space.color ||')' RETURNING *;
!            time           | temp |   color   |      device_id       
! --------------------------+------+-----------+----------------------
!  Fri Jan 20 09:00:01 2017 | 23.5 | orange3.1 | dev3                
! (1 row)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev2', 23.5, 'orange4') ON CONFLICT (time, device_id)
! DO NOTHING RETURNING *;
!  time | temp | color | device_id 
! ------+------+-------+-----------
! (0 rows)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev4', 23.5, 'orange5') ON CONFLICT (time, device_id)
! DO NOTHING RETURNING *;
!            time           | temp |  color  |      device_id       
! --------------------------+------+---------+----------------------
!  Fri Jan 20 09:00:01 2017 | 23.5 | orange5 | dev4                
! (1 row)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev5', 23.5, 'orange5') ON CONFLICT (time, device_id)
! DO NOTHING RETURNING *;
!            time           | temp |  color  |      device_id       
! --------------------------+------+---------+----------------------
!  Fri Jan 20 09:00:01 2017 | 23.5 | orange5 | dev5                
! (1 row)
! 
! --restore a column with the same name as a previously deleted one;
! ALTER TABLE upsert_test_space ADD device_id_1 char(20);
! INSERT INTO upsert_test_space (time, device_id, temp, color, device_id_1) VALUES ('2017-01-20T09:00:01', 'dev4', 23.5, 'orange5.1', 'dev-id-1') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color||' (originally '|| upsert_test_space.color ||')' RETURNING *;
!            time           | temp |             color              |      device_id       | device_id_1 
! --------------------------+------+--------------------------------+----------------------+-------------
!  Fri Jan 20 09:00:01 2017 | 23.5 | orange5.1 (originally orange5) | dev4                 | 
! (1 row)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev5', 23.5, 'orange6') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color WHERE upsert_test_space.temp < 20 RETURNING *;
!  time | temp | color | device_id | device_id_1 
! ------+------+-------+-----------+-------------
! (0 rows)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev5', 23.5, 'orange7') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color WHERE excluded.temp < 20 RETURNING *;
!  time | temp | color | device_id | device_id_1 
! ------+------+-------+-----------+-------------
! (0 rows)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev5', 3.5, 'orange7') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color, temp=excluded.temp WHERE excluded.temp < 20 RETURNING *;
!            time           | temp |  color  |      device_id       | device_id_1 
! --------------------------+------+---------+----------------------+-------------
!  Fri Jan 20 09:00:01 2017 |  3.5 | orange7 | dev5                 | 
! (1 row)
! 
! INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev5', 43.5, 'orange8') ON CONFLICT (time, device_id)
! DO UPDATE SET color = excluded.color WHERE upsert_test_space.temp < 20 RETURNING *;
!            time           | temp |  color  |      device_id       | device_id_1 
! --------------------------+------+---------+----------------------+-------------
!  Fri Jan 20 09:00:01 2017 |  3.5 | orange8 | dev5                 | 
! (1 row)
! 
! SELECT * FROM upsert_test_space; 
!            time           | temp |             color              |      device_id       | device_id_1 
! --------------------------+------+--------------------------------+----------------------+-------------
!  Fri Jan 20 09:00:01 2017 | 25.9 | orange                         | dev1                 | 
!  Fri Jan 20 09:00:01 2017 | 25.9 | orange3 (originally yellow)    | dev2                 | 
!  Fri Jan 20 09:00:01 2017 | 23.5 | orange3.1                      | dev3                 | 
!  Fri Jan 20 09:00:01 2017 | 23.5 | orange5.1 (originally orange5) | dev4                 | 
!  Fri Jan 20 09:00:01 2017 |  3.5 | orange8                        | dev5                 | 
! (5 rows)
! 
! WITH CTE AS (
!     INSERT INTO upsert_test_multi_unique
!     VALUES ('2017-01-20T09:00:01', 25.9, 'purple')
!     ON CONFLICT DO NOTHING
!     RETURNING *
! ) SELECT 1;
!  ?column? 
! ----------
!         1
! (1 row)
! 
! WITH CTE AS (
!     INSERT INTO upsert_test_multi_unique
!     VALUES ('2017-01-20T09:00:01', 25.9, 'purple'),
!     ('2017-01-20T09:00:01', 29.9, 'purple1')
!     ON CONFLICT DO NOTHING
!     RETURNING *
! ) SELECT * FROM CTE;
!            time           | temp |  color  
! --------------------------+------+---------
!  Fri Jan 20 09:00:01 2017 | 29.9 | purple1
! (1 row)
! 
! WITH CTE AS (
!     INSERT INTO upsert_test_multi_unique
!     VALUES ('2017-01-20T09:00:01', 25.9, 'blue')
!     ON CONFLICT (time, temp) DO UPDATE SET color = 'blue'
!     RETURNING *
! )
! SELECT * FROM CTE;
!            time           | temp | color 
! --------------------------+------+-------
!  Fri Jan 20 09:00:01 2017 | 25.9 | blue
! (1 row)
! 
--- 145,151 ----
  INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev2', 25.9, 'yellow');
  INSERT INTO upsert_test_space (time, device_id, temp, color) VALUES ('2017-01-20T09:00:01', 'dev1', 23.5, 'orange') ON CONFLICT (time, device_id)
  DO UPDATE SET color = excluded.color;
! server closed the connection unexpectedly
! 	This probably means the server terminated abnormally
! 	before or while processing the request.
! connection to server was lost

======================================================================

